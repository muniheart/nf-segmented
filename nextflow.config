params {
    meta                        = null      // YAML/CSV file that defines the segmentation of nested pipeline.

    //
    // Options passed to `nextflow run` when executing the nested pipeline.
    // 
    nfcore_demo_pipeline        = null      // Name or URI of nested pipeline.
    nfcore_demo_samplesheet     = null      // Value passed with '--input' option.
    nfcore_demo_databases       = null      // Value passed with '--databases' option.
    nfcore_demo_opts            = null      // Additional command-line options.
    nfcore_demo_add_config      = null      // Value passed with '-c' option.

    debug                       = true
    outdir                      = null
    keep_workdir                = false     // Retain contents of workdirs of nested pipeline?
    mount_images                = true      // Mount workdir images of previous tasks to container?
    create_workdir_symlinks     = false     // Create symlinks to prior tasks' workdirs in current task's workdir?
    define_workdir_vars         = false     // Define env vars wk1,... in container environment?

    slurm.passwd_line           = null
    slurm.group_line            = null
    env_vars                    = null
    bind_mounts                 = null

    batch_size                  = -1        // Samplesheet will be split into batches of this size.
                                            // Default=-1 // don't split
    trace_report_suffix         = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')// Config options
}

process {
    errorStrategy = 'finish'
}

profiles {
    apptainer {
        apptainer.enabled = true
        apptainer.envWhitelist = "APPTAINER_MESSAGELEVEL,APPTAINER_BIND"
    }
}

timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${params.trace_report_suffix}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${params.trace_report_suffix}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${params.trace_report_suffix}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${params.trace_report_suffix}.html"
}

includeConfig 'conf/modules.config'
